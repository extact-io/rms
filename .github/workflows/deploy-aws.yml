name: deploy-aws

on:
  workflow_dispatch:
    branches: [ main ]

jobs:
  build_test_deploy-jar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Java11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build & Test & Deploy for server
      run: |
        mvn -B -Pcli,server clean deploy --file pom.xml
      env:
        GITHUB_TOKEN: ${{ github.token }} # for deploy to GitHub Packages.
    - name: make deployment for rms-server
      run: |
        mvn -B -Pcli,copy-libs,product clean package -DskipTests=true --file pom.xml
        mkdir rmsServiceApp
        mv ./target/libs ./rmsServiceApp
        mv ./target/rms-server.jar ./rmsServiceApp
        mv ./env/deployment/appspec.yml ./rmsServiceApp
        mv ./env/deployment/logback-production.xml ./rmsServiceApp
        mv ./env/deployment/scripts ./rmsServiceApp
        mv ./env/init-data ./rmsServiceApp
      working-directory: rms-server
      env:
        GITHUB_TOKEN: ${{ github.token }} # for resolve to GitHub Packages.
    - name: Upload build Artifact of app
      uses: actions/upload-artifact@v2
      with:
        name: rmsServiceApp
        path: rms-server/rmsServiceApp
        retention-days: 1

  deploy_app_to_aws:
    runs-on: ubuntu-latest
    needs: [build_test_deploy-jar]
    steps:
      - name: Download Artifact of ersService
        uses: actions/download-artifact@v2
        with:
          name: rmsServiceApp
          path: rms-server/rmsServiceApp
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Upload file to S3 and CodeDeploy
        env:
          S3_UPLOAD_BUCKET: ${{ secrets.S3_UPLOAD_BUCKET }}
        run: |
          ZIP_NAME="rmsServiceApp/ersService-"`date "+%Y%m%d_%H%M%S"`.zip
          aws deploy push --application-name rmsServiceApplication --s3-location s3://$S3_UPLOAD_BUCKET/$ZIP_NAME --ignore-hidden-files --source ./rmsServiceApp
          aws deploy create-deployment --application-name rmsServiceApplication --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name rmsServiceApplicationGroup --s3-location bucket=$S3_UPLOAD_BUCKET,bundleType=zip,key=$ZIP_NAME
        working-directory: rms-server
