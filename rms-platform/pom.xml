<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.extact</groupId>
    <artifactId>rms-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>rms-platform</artifactId>
  <packaging>jar</packaging>

  <name>rms-platform</name>
  <description>
    The fundamental module of the application
  </description>

  <dependencies>


    <!-- ======================================== -->
    <!-- *** provided scope dependencies ***      -->
    <!-- ======================================== -->
    <!--
       modules that depend on code are provided scope, because this project works only for testing.
       provided scoped is included in the classpath at test.
       NOTE: Redefines scope on the user side
    -->
    <!-- dependent JakartaEE APIs -->
    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>jakarta.enterprise.cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.json</groupId>
      <artifactId>jakarta.json-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.json.bind</groupId>
      <artifactId>jakarta.json.bind-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.security.enterprise</groupId>
      <artifactId>javax.security.enterprise-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.persistence</groupId>
      <artifactId>jakarta.persistence-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- dependent MicroProfile APIs -->
    <dependency>
      <groupId>org.eclipse.microprofile.config</groupId>
      <artifactId>microprofile-config-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.openapi</groupId>
      <artifactId>microprofile-openapi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.health</groupId>
      <artifactId>microprofile-health-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.jwt</groupId>
      <artifactId>microprofile-jwt-auth-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.helidon.config</groupId>
      <artifactId>helidon-config-yaml</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.helidon.config</groupId>
      <artifactId>helidon-config-encryption</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- ======================================== -->
    <!-- *** compile scope dependencies(APIs) *** -->
    <!-- ======================================== -->
    <!--
         NOTEï¼šThe following is in the compile scope, but those that do not need dependency
               such as ui should be excluded on the user side.
     -->
    <!-- dependent Implementation Libs -->
    <dependency>
      <groupId>org.bitbucket.b_c</groupId>
      <artifactId>jose4j</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.jpa</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.helidon.config</groupId>
      <artifactId>helidon-config-mp</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- ======================================== -->
    <!-- *** test scope dependencies(APIs) *** -->
    <!-- ======================================== -->
    <!-- for test libraries -->
    <dependency>
      <groupId>io.extact</groupId>
      <artifactId>rms-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- below are the libraries needed only to run the tests. -->
    <dependency>
      <groupId>io.helidon.microprofile.server</groupId>
      <artifactId>helidon-microprofile-server</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.helidon.microprofile.health</groupId>
      <artifactId>helidon-microprofile-health</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.helidon.health</groupId>
      <artifactId>helidon-health-checks</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.helidon.microprofile.rest-client</groupId>
      <artifactId>helidon-microprofile-rest-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.ext</groupId>
      <artifactId>jersey-bean-validation</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- For binding to application/json. It won't work without this -->
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-binding</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.plugin.maven-surefire}</version>
        <configuration>
          <additionalClasspathElements>
            <additionalClasspathElement>./testdata/environment-test-normal.zip</additionalClasspathElement>
            <additionalClasspathElement>./rms-platform/testdata/environment-test-normal.zip</additionalClasspathElement>
          </additionalClasspathElements>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
